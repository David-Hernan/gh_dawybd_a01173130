const express = require('express');

const router = express.Router(); 

router.get('', (request, response, next) => {
    let lab = '<head><meta charset="UTF-8"></head>';
    lab += '<!DOCTYPE html><html><head><h2>David Hernán García Fernández - A01173130</h2><h3>Información de contacto: a01173130@itesm.mx</h3><a href="/">Volver al menú</a></head><body><br><br><header><strong><h4>Seleccione el Laboratorio que desea visualizar</h4></strong></header>';
    lab += '<body><p><a href="/lab3">Laboratorio 3</a></p><p><a href="/lab5">Laboratorio 5</a></p><p><a href="/lab6">Laboratorio 6</a></p><p><a href="/lab7">Laboratorio 7</a> (con bootstrap)</p><p><a href="/labs/lab12">Laboratorio 12</a></p></body>';
    response.send(lab); 
});

router.get('/lab12', (request, response, next) => {
    let lab12 = '<head><meta charset="UTF-8"></head>';
    lab12 += '<!DOCTYPE html><html><head><h2>David Hernán García Fernández - A01173130</h2><h3>Información de contacto: a01173130@itesm.mx</h3></head><body><br><a href="/labs">Volver al menú de laboratorios</a><br><br><h3>Laboratorio 12</h3><header><strong><h4>Pregunta a responder</h4></strong></header><strong>Describe el archivo package.json.</strong>';
    lab12 += '<p>El archivo package.json contiene los metadatos que son relevantes para el proyecto al proporcionar información a npm lo que permite manejar las dependencias del mismo y conocer su información (nodejs.org, 2011).</p><p>El archivo contiene varias secciones como las siguientes: name, que tiene el nombre del proyecto; versión, que indica la versión; description, que provee una descripción sobre el proyecto; main, que es el punto de entrada del programa; repository, que indica la ubicación del repositorio; scripts, que funciona como un diccionario donde se contienen los comandos de script; dependencies, que asigna un nombre de paquete a un rango de versiones; devDependencies, que mapea los recursos adicionales requeridos por el proyecto; entre otros (npmDocs, s.f.).</p><br><br><strong>Bibliografía:</strong>';
    lab12 += '<li>nodejs.org (2011). What is the file `package.json`?. URL: <a href="https://nodejs.org/en/knowledge/getting-started/npm/what-is-the-file-package-json/">https://nodejs.org/en/knowledge/getting-started/npm/what-is-the-file-package-json/</a></li><li>npmDocs.(s.f.). package.json. URL: <a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json">https://docs.npmjs.com/cli/v7/configuring-npm/package-json</a></li><br><br></body><footer><header>Editor HTML: <a href="https://code.visualstudio.com/">Visual Studio Code </a></header></footer></html>';
    response.send(lab12); 
});

/*router.get('/lab7', (request, response, next) => {
    let lab7 = '<head><meta charset="UTF-8"></head>';
    lab7 += '<!doctype html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous"><title>Laboratorio 7</title><div class="container-fluid"><div class="row"><div class="col-1" style="background-color: #05052e"><br></div><div class="col-11" style="background-color:black;"><br><h2 style="color: white;">David Hernán García Fernández - A01173130</h2><h3 style="color: rgba(67, 67, 224, 0.5);">Información de contacto: a01173130@itesm.mx</h3><p id="description" style="color: rgb(161, 161, 231);">Soy estudiante de ISDR. Tengo experiencia programando en C, Java, Python, VHDL y Verilog; así como en la implementación de algoritmos de Machine Learning y visión artificial. Las actividades que me gusta realizar son: correr, bailar, leer, viajar, y aprender cosas nuevas. Me encanta la robótica.</p></div><div class="col-1" style="background-color: #04043d"><br></div><div class="col-11" style="background-color: #111114;"><br></div></div></div></head><body><div class="container-fluid"><div class="row"><div class="col-1" style="background-color: #06065f"><br></div><div class="col-11"><header><h3><strong>Preguntas a responder</strong></h3></header><header><h4><strong>Laboratorio 1:</strong></h4></header>';
    lab7 += '<a href="/labs">Volver al menú de laboratorios</a><div class="accordion" id="accordionExample"><div class="accordion-item"><h2 class="accordion-header" id="headingOne"><button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">1. ¿Cuál es la diferencia entre Internet y la World Wide Web?</button></h2><div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample"><div class="accordion-body"><p>La World Wide Web, que es un conjunto de páginas, se encuentra sobre el Internet, el cual es una red de computadoras conectadas entre ellas (BBC News, 2019).</p></div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingTwo"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">2. ¿Cuáles son las partes de un URL?</button></h2><div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample"><div class="accordion-body"><p>Las partes de la URL son: El protocolo http o https, que significa Hypertext Transfer Protocol y sirve para transferir la información; el subdominio, que corresponde a la parte del “www” en varias URL’s; el dominio, compuesto por un nombre de dominio el cual es único y la TLD que suele ser útil para indicar el tipo de sitio web al que hace referencia la URL, por ejemplo: .gov para sitios de gobierno o .edu para aquellos enfocados a la educación.</p><p>Otros elementos que conforman una URL son la ruta, que indica las subpáginas de un sitio web y se encuentra después de una barra “/”; el parámetro, localizado después de un signo de interrogación cerrado; y la etiqueta, que se encuentra antecedida por un “#” y permiten encontrar elementos concretos (Muñoz, 2018).</p></div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingThree"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">3. ¿Cuál es el propósito de los métodos HTTP: GET, HEAD, POST, PUT, PATCH, DELETE?</button></h2><div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample"><div class="accordion-body"><p><li type="square">GET: Se usa para leer o consultar datos y arrojará el error 404 si no son encontrados.</li><li type="square">HEAD: Se utiliza para conseguir información sobre algún recurso determinado, pero sin que se retorne el registro.</li><li type="square">POST: Se emplea para crear un nuevo registro en el servidor. </li><li type="square">PUT: Su función consiste en la actualización completa de un registro que ya existe, reemplazando la información anterior con la nueva.</li><li type="square">PATCH: Útil cuando se dese actualizar sólo un fragmento del registro, siendo esta su diferencia con el método PUT.</li><li type="square">DELETE: Su propósito es el de eliminar algún registro en específico.</li><p>(Blancarte, 2018)</p></p></div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingFour"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">4. ¿Qué método HTTP se debe utilizar al enviar un formulario HTML, por ejemplo cuando ingresas tu usuario y contraseña en algún sitio? ¿Por qué?</button></h2><div id="collapseFour" class="accordion-collapse collapse" aria-labelledby="headingFour" data-bs-parent="#accordionExample"><div class="accordion-body"><p>El método POST es el que debe usarse porque tiene la capacidad de “ocultar” los datos que manda al servidor impidiendo que el cliente los vea (Aperderaprogramar.com, s.f.).</p></div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingFive"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">5. ¿Qué método HTTP se utiliza cuando a través de un navegador web se accede a una página a través de un URL?</button></h2><div id="collapseFive" class="accordion-collapse collapse" aria-labelledby="headingFive" data-bs-parent="#accordionExample"><div class="accordion-body"><p>Se hace uso del método GET ya que el mismo tiene la capacidad de regresar información.</p></div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingSix"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSix" aria-expanded="false" aria-controls="collapseSix">6. Un servidor web devuelve una respuesta HTTP con código 200. ¿Qué significa esto? ¿Ocurrió algún error?</button></h2><div id="collapseSix" class="accordion-collapse collapse" aria-labelledby="headingSix" data-bs-parent="#accordionExample"><div class="accordion-body"><p>No es un error, al contrario, significa que el método utilizado para obtener información encontró lo que le fue solicitado. </p></div></div></div><div class="accordion-item"><h2 class="accordion-header" id="headingSeven"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSeven" aria-expanded="false" aria-controls="collapseSeven">Preguntas 7-15</button></h2><div id="collapseSeven" class="accordion-collapse collapse" aria-labelledby="headingSeven" data-bs-parent="#accordionExample"><div class="accordion-body"><dl><ol><dt><li value="7"><strong>¿Es responsabilidad del desarrollador corregir un sitio web si un usuario reporta que intentó acceder al sitio y se encontró con un error 404? ¿Por qué?</strong></li></dt><dd><p>Sí, es su responsabilidad corregirlo pues implica que el usuario trató de acceder a un recurso de la página y que éste no fue encontrado; lo que podría significar que el enlace se ha roto. </p></dd><dt><li><strong>¿Es responsabilidad del desarrollador corregir un sitio web si un usuario reporta que intentó acceder al sitio y se encontró con un error 500? ¿Por qué?</strong></li></dt><dd><p>Sí, es responsabilidad del desarrollador debido a que el error 500 implica un error interno en el servidor el cual podría ocurrir por fallos en la programación de la página (Noguera, 2020).</p></dd><dt><li><strong>¿Qué significa que un atributo HTML5 esté depreciado o desaprobado (deprecated)? Menciona algunos elementos de HTML 4 que en HTML5 estén desaprobados.</strong></li></dt><dd><p>Significa que el atributo en cuestión es considerado como obsoleto y que su uso ya no es recomendado. Algunos ejemplos de los depreciados por HTML5 son: basefont, font, big, center, strike, frame, acronym, entre otros (Johnbo, 2012).</p></dd><dt><li><strong>¿Cuáles son las diferencias principales entre HTML 4 y HTML5?</strong></li></dt><dd><p>Las páginas que se creaban en versiones anteriores de HTML eran estáticas y requerían de CSS y JavaScript para que no lo fueran, en cambio, HTML5 soporta audio y video y es más dinámico, permitiendo que se hagan animaciones o juegos con él. Además, es más rápido, lo que mejora la fluidez en dispositivos pequeños y se eliminaron los marcos, entre otras cosas (Barron, 2021).</p></dd><dt><li><strong>¿Qué componentes de estructura y estilo tiene una tabla?</strong></li></dt><dd><p>La tabla se define mediante la etiqueta “table”, las filas se indican con “tr” y las columnas dentro de cada fila con “td” (es posible combinar las celdas a través de éstos dos últimos). Las celdas de cabecera se indican con “th” (provocando que se escriban en negritas), la etiqueta “caption” sirve para agregar un título a la tabla, “colgroup” permite agrupar columnas a través de la etiqueta “col” que indica en número de columnas en el grupo, además les puede dar color.  Se pueden agregar más detalles a la tabla si se hace uso de CSS (Sánchez, s.f.).</p></dd><dt><li><strong>¿Cuáles son los principales controles de una forma HTML5?</strong></li></dt>';
    lab7 += '<dd><p>Los principales controles de formulario son button (botón), checkbox, submit (enviar), tel (número de teléfono), email, file (archivo), image (imagen), month (mes), color (permite seleccionar un color), date (fecha), range (seleccionar el rango), search (buscar), number (indicar un número), password (ingresar contraseña), radio (tipo de botón), text (ingresar texto), time, week (seleccionar una semana) y url (Eniun, s.f.).</p></dd><dt><li><strong>¿Qué tanto soporte HTML5 tiene el navegador que utilizas? Puedes utilizar la siguiente página para descubrirlo: http://html5test.com/ </strong></li></dt><dd><p>Utilizo Google Chrome que soporta 476 de 555 puntos. </p></dd><strong>Sobre el ciclo de vida y desarrollo de los sistemas de información:</strong><br><br><dt><li value="14"><strong>¿Cuál es el ciclo de vida de los sistemas de información?</strong></li></dt><dd><p><li value="1">Fase de planificación.</li><li>Fase de análisis.</li><li>Fase de diseño.</li><li>Fase de desarrollo.</li><li>Fase de integración y periodo de pruebas.</li><li>Fase de implementación.</li><li>Fase de mantenimiento.</li></p></dd><p>(PowerData, 2019).</p><dt><li value="15"><strong>¿Cuál es el ciclo de desarrollo de sistemas de información?</strong></li></dt><dd><p><li value="1">Planificación del concepto.</li><li>Definición de requisitos.</li><li>Diseño</li><li>Fase del desarrollo y pruebas.</li><li>Puesta en marcha.</li><li>Operaciones y mantenimiento.</li><li>Disposición.</li></p></dd><p>(Viewnext, 2018).</p></ol></dl></div></div></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col-1" style="background-color: #06065f"><br></div><div class="col-11"><br><header><h4><strong>Laboratorio 3:</strong></h4></header></div><div class="col-1" style="background-color: #06065f"><br></div><div class="col-5"><div class="alert alert-primary" role="alert">1. Como ingeniero de software ¿cuál es tu recomendación sobre el uso de !important en un CSS?</div><p>Sirve para que algún estilo tenga una importancia mayor que aquella que le corresponde por default, por lo que resulta útil para modificar el estilo de partes muy específicas del programa que no podrían cambiarse de otra forma, sin embargo, abusar de este recurso puede provocar que el código sea confuso.</p></div><div class="col-5"><div class="alert alert-info" role="alert">2. Si se pone una imagen de fondo en una página HTML, ¿por qué debe escogerse con cuidado?</div><p>Los colores de la imagen podrían provocar que sea difícil leer el texto, por otro lado, la imagen tardará más en cargar si la misma tiene una resolución muy alta, sin mencionar que cada usuario del sitio puede tener pantallas con resoluciones diferentes.</p></div><div class="col-1"></div><div class="col-1" style="background-color: #06065f"><br></div><div class="col-5"><div class="alert alert-secondary" role="alert">3. Como ingeniero de software, ¿cuál es tu recomendación al elegir las unidades de un propiedad de estilo entre %, px y pt?</div><p>Aunque ninguna es mejor que la otra, lo más recomendable sería utilizar un diseño responsivo (%) porque, en la mayoría de los casos, no hay forma de conocer la dimensión de pantalla que tendrá el usuario.</p></div><div class="col-5"><div class="alert alert-dark" role="alert">4. ¿Por qué el uso de una versión minimizada del CSS mejora el rendimiento del sitio?</div><p>El css no minimizado contiene muchos elementos que son útiles para que los humanos lo entendamos, pero irrelevantes para una computadora. El problema es que dichos elementos provocan que el archivo de estilo sea más pesado, lo que hace que el sitio web tarde más en cargar y ocupe más espacio en la memoria.</p></div><div class="col-1"></div></div></div><div class="container-fluid"><div class="row"><div class="col-1" style="background-color: #06065f"><br></div><div class="col-11"><br><header><h4><strong>Laboratorio 7:</strong></h4></header><div class="accordion" id="accordionPanelsStayOpenExample"><div class="accordion-item"><h2 class="accordion-header" id="panelsStayOpen-headingOne"><button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">Describe Material design</button></h2><div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne"><div class="accordion-body">Es una normativa de diseño para las aplicaciones que han de usarse en dispositivos Android, aunque también puede usarse para aplicaciones web en general. Se caracteriza por tener un estilo muy limpio con varias animaciones y transiciones (Smith, 2014).</div></div></div></div></div></div></div><div class="container-fluid"><div class="row"><div class="col-1" style="background-color: #06065f"><br></div><div class="col-11"><br><head><h3><strong>Bibliografía:</strong></h3></head><li>Aperderaprogramar.com. (s.f.). get y post HTML: method. Formas de envío de datos en formulario. Diferencias y ventajas. Ejemplos (CU00721B). URL: <a href="https://www.aprenderaprogramar.com/index.php?option=com_content&view=article&id=527:get-y-post-html-method-formas-de-envio-de-datos-en-formulario-diferencias-y-ventajas-ejemplos-cu00721b&catid=69&Itemid=192">https://www.aprenderaprogramar.com/index.php?option=com_content&view=article&id=527:get-y-post-html-method-formas-de-envio-de-datos-en-formulario-diferencias-y-ventajas-ejemplos-cu00721b&catid=69&Itemid=192</a></li><li>BBC News. (2019). ¿Cuál es la diferencia entre internet y la web? (y por qué muchos las confunden). Sitio web:<a href="https://www.bbc.com/mundo/noticias-47538812">https://www.bbc.com/mundo/noticias-47538812</a></li><li>Blancarte, O. (2018). Métodos HTTP (REST). De Oscar Blancarte Blog. Sitio web: <a href="https://www.oscarblancarteblog.com/2018/12/03/metodos-http-rest/">https://www.oscarblancarteblog.com/2018/12/03/metodos-http-rest/</a></li><li>Barron, B. (2021). HTML vs HTML5: Conoce las diferencias cruciales entre ellos. De: Kinsta. Sitio web: <a href="https://kinsta.com/es/blog/html-vs-html5/">https://kinsta.com/es/blog/html-vs-html5/</a></li><li>Eniun. (s.f.). Etiquetas para la creación de formularios HTML. Sitio web: <a href="https://www.eniun.com/etiquetas-formularios-html5/ ">https://www.eniun.com/etiquetas-formularios-html5/ </a></li><li>Johnbo. (2012). Despídete de los elementos que HTML5 no quiere que sigas usando. De Genbeta. Sitio web: <a href="https://www.genbeta.com/desarrollo/despidete-de-los-elementos-que-html5-no-quiere-que-sigas-usando ">https://www.genbeta.com/desarrollo/despidete-de-los-elementos-que-html5-no-quiere-que-sigas-usando </a></li><li>Muñoz, D. (2018). Punto y coma: ¿Cómo se utiliza y para qué sirve?. De Universidad Pontifica Bolivariana. Sitio web: <a href="https://www.upb.edu.co/es/central-blogs/ortografia/como-se-usa-punto-y-coma ">https://www.upb.edu.co/es/central-blogs/ortografia/como-se-usa-punto-y-coma </a></li><li>Noguera, D. (2020). HTTP Error 500 – Internal Server Error, Qué es y Cómo Solucionar. De WebEmpresa.mx. Sitio web: <a href="https://www.webempresa.mx/blog/que-es-un-error-500-y-como-localizarlo-en-nuestra-web.html ">https://www.webempresa.mx/blog/que-es-un-error-500-y-como-localizarlo-en-nuestra-web.html </a></li><li>PowerData. (2019). Ciclo de vida de un sistema de información: fases y componentes. Sitio web: <a href="https://blog.powerdata.es/el-valor-de-la-gestion-de-datos/ciclo-de-vida-de-un-sistema-de-informacion-fases-y-componentes ">https://blog.powerdata.es/el-valor-de-la-gestion-de-datos/ciclo-de-vida-de-un-sistema-de-informacion-fases-y-componentes </a></li><li>Sánchez, J. (s.f.). introducción a las tablas. De JorgeSanchez.net. Sitio web: <a href="https://jorgesanchez.net/manuales/html/tablas-html.html  ">https://jorgesanchez.net/manuales/html/tablas-html.html</a></li><li>Smith, C. (2014). Google’s Material Design is about to change the way we look at the worldwide web. De BGR. Sitio web: <a href="https://bgr.com/general/google-drive-material-design-update/">https://bgr.com/general/google-drive-material-design-update/</a> </li><li>Viewnext. (2018). El ciclo SDLC en 7 fases. Sitio web: <a href="https://www.viewnext.com/el-ciclo-sdlc-en-7-fases/ ">https://www.viewnext.com/el-ciclo-sdlc-en-7-fases/ </a></li><br><br><br><br></div></div></div><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script></body><footer><div class="container-fluid"><div class="row"><div class="col-1" style="background-color: #17174b"><br></div><div class="col-11" style="background-color: #03031b"><br><header style="color: white;">Editor HTML: <a href="https://code.visualstudio.com/"><span style="color:#21c256">Visual Studio Code</span> </a></header><br> </div></div> </div></footer></html>';
    response.send(lab7); 
});*/

module.exports = router;